# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedUrlHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedUrlHelpersModule`.

module GeneratedUrlHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def accept_invite_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_player_problem_aggregates_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_player_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_players_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_problems_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_relevels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_reset_player_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alpha_announcement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_admin_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_player_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invite_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invites_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def learn_more_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def login_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def login_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_invite_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_login_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_order_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_player_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_source_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_responses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def player_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def players_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_view_component_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_view_components_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def privacy_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def problem_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_incinerate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_sources_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_health_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_relay_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def responses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def score_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sessions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def success_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tos_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trial_memberships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_recede_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_refresh_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_resume_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def webhook_url(*args); end
end
